---
title: "HiDecon result update"
author: "Penghui Huang"
date: "2023-02-16"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Source Functions

```{r}
source("D:/Penghui/HiDecon preferred vers/HiDecon all fun.R")
```


## COVID-19 major type data (139 samples)


```{r}
load(file = "D:/Penghui/COVID19 Ren data/ren.ref.all.RData")
cell_type <- rep(c("B", "CD8", "CD4", "Mono", "NK", "DC"),139)

B1 <- rep(1,2)
B2 <- matrix(c(1,1,0,0,0,0,1,1),nrow = 2, byrow = T)
B3 <- matrix(c(1,rep(0,5),1,rep(0,5),1,rep(0,5),1,1),nrow = 4, byrow = T)
B4 <- matrix(c(1,rep(0,6),1,rep(0,6),1,rep(0,6),1,rep(0,6),1,1),nrow = 5, byrow = T)
B = list(B1,B2,B3,B4)

load("D:/Penghui/COVID19 Ren data/naturemix.all.RData")
```

## Performance on COVID-19 major type data 


```{r}
COVIDmajor_cvres <- cv_HiDecon(bulk = naturemix$bulk, ref = ren.ref, B = B, cell_type = cell_type, type_order = c("Mono", "DC", "B","NK","CD4", "CD8"), 
                       lambda.set = seq(10,200,10), Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                       test = "wilcox", nmrk = 50, seed = 123)
```

```{r}
# test other methods
source("D:/Penghui/HiDecon preferred vers/Other methods.R")
real_prop <- naturemix$true.frac[,c("Mono","DC","B","NK","CD4","CD8")]
other_est <- Other_methods(bulk = naturemix$bulk, ref = ren.ref, cell_type = cell_type, real_prop = real_prop)
```



```{r}
HiDecon_est <- COVIDmajor_cvres$cv_res
round(diag(cor(real_prop, HiDecon_est)), 3)
round(mean(diag(cor(real_prop, HiDecon_est))),3)
round(mean(abs(as.matrix(real_prop - HiDecon_est))),3)
```

```{r}
HiDecon_est <- COVIDmajor_cvres$cv_res
real_prop <- naturemix$true.frac[,c("Mono","DC","B","NK","CD4","CD8")]
round(diag(cor(real_prop, HiDecon_est, method = "spearman")), 3)
round(mean(diag(cor(real_prop, HiDecon_est, method = "spearman"))),3)
round(mean(abs(as.matrix(real_prop - HiDecon_est))),3)
```

```{r}
rownames(HiDecon_est) <- rownames(other_est[[1]])
nature_res <- c(other_est, list("HiDecon"=HiDecon_est))
true_frac <- real_prop
```

```{r, warning=FALSE}
my.CCC <- function(est, tr){
  CT.CCC <- c()
  for(i in 1:ncol(est)){
    CT.CCC <- c(CT.CCC, unlist(DescTools::CCC(est[,i], tr[,i])$rho.c[1]))
  }
  CT.CCC <- c(CT.CCC, mean(CT.CCC))
  names(CT.CCC) <- c(colnames(est), "mCCC")
  
  return(CT.CCC)
}

CT.CCC <- lapply(nature_res, function(x){my.CCC(x, real_prop)})
CT.CCC <- matrix(unlist(CT.CCC), byrow= TRUE, ncol= ncol(real_prop)+1)
colnames(CT.CCC) <- c("Mono","DC","B","NK","CD4","CD8","mCCC")
rownames(CT.CCC) <- names(nature_res)
round(CT.CCC,3)
```

## FHS data 

```{r}
load("C:/D-drive/ensemble deconvolution/data/PBMC/wbc_ref.RData")
cell_type <- ref_list$lm22$meta_ref$deconv_clust

B1 <- rep(1,2)
B2 <- matrix(data = c(1,rep(0,4),rep(1,3)),nrow = 2,byrow = T)
B = list(B1,B2)

load("D:/dbgap/fhs/fhs_expr_pheno.rdata")
fhs_true <- readRDS("D:/Manqi/data/FHS/fhs_true.rds")
```

```{r}
system.time(single_run <- HiDecon(bulk = 2^expr-1,ref = ref_list$lm22$ref_matrix, B = B, cell_type = cell_type, type_order = c("lymphocytes", "eosinophils","monocytes","neutrophils"), 
                    lambda = 90, Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                    test = "wilcox", nmrk = 50))
FHS_cvres <- cv_HiDecon(bulk = 2^expr-1,ref = ref_list$lm22$ref_matrix, B = B, cell_type = cell_type, type_order = c("lymphocytes", "eosinophils","monocytes","neutrophils"), 
                       lambda.set = seq(10,200,10), Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                       test = "wilcox", nmrk = 50, seed = 123)
HiDecon_est <- FHS_cvres$cv_res
colnames(HiDecon_est) <-  c("lymphocytes", "eosinophils","monocytes","neutrophils")
```

```{r}
source("D:/Penghui/ASA/HiDecon_wrapper on p.R")
other_est <- HiDeconv_wrapper(bulk = 2^expr-1,ref = ref_list$lm22$ref_matrix,B=B,cell_type=cell_type,real_prop=fhs_true)
```

```{r}
HiDecon_est <- HiDecon_est[,colnames(other_est[[1]])]
rownames(HiDecon_est) <- rownames(other_est[[1]])
nature_res <- c(other_est, list("HiDecon"=HiDecon_est))
true_frac <- fhs_true

```



```{r, warning=FALSE}
my.CCC <- function(est, tr){
  CT.CCC <- c()
  for(i in 1:ncol(est)){
    CT.CCC <- c(CT.CCC, unlist(DescTools::CCC(est[,i], tr[,i])$rho.c[1]))
  }
  CT.CCC <- c(CT.CCC, mean(CT.CCC))
  names(CT.CCC) <- c(colnames(est), "mCCC")
  
  return(CT.CCC)
}

CT.CCC <- lapply(nature_res, function(x){my.CCC(x, true_frac)})
CT.CCC <- matrix(unlist(CT.CCC), byrow= TRUE, ncol= ncol(true_frac)+1)
colnames(CT.CCC) <- c("neutrophils", "lymphocytes", "monocytes",   "eosinophils","mCCC")
rownames(CT.CCC) <- names(nature_res)
CT.CCC <- CT.CCC[c("HiDecon", "CIBERSORT", "dtangle", "HEpiDish", "MuSiC"),]
round(CT.CCC,2)
```

```{r}
nature_res <- nature_res[c("HiDecon", "CIBERSORT", "dtangle", "HEpiDish", "MuSiC")]
nature_res <- c(list("real"=true_frac), nature_res)
nature_res <- nature_res[c("real","HiDecon", "CIBERSORT", "dtangle", "HEpiDish", "MuSiC")]
save(nature_res, file = "D:/Penghui/HiDecon preferred vers/FHS res.RData")
```

```{r}
load("D:/Penghui/HiDecon preferred vers/FHS res.RData")
real_prop <- nature_res$real
nature_res$real <- NULL
true_frac <- real_prop
source("D:/Penghui/HiDecon on p/HiDecon_wrapper on p.R") #just to use the getOutput function in this file
major_df <- lapply(1:length(nature_res), function (x){
  getOutput(nature_res[[x]],true = as.data.frame(true_frac),methd = names(nature_res)[x])
}) 
major_df <- bind_rows(major_df)
major_df$bulk <- "FHS"

celltype_col = c("#335c67", "#e09f3e", "#9e2a2b", "#a4ac86")
```

```{r}
types <- c("neutrophils", "lymphocytes", "monocytes",   "eosinophils")
methods <- c("HiDecon","CIBERSORT","dtangle","HEpiDish","MuSiC")
range <- list(c(0,1),c(0,1),c(0,0.8),c(0,0.4))
axisbreaks <- list(seq(0,1,0.3), seq(0,1,0.3), seq(0,0.8,0.2),seq(0,0.4,0.1))
onebyone <- function(type, method){
  ab <- axisbreaks[[type]]
  plotrange <- range[[type]]
  color <- celltype_col[type]
  type <- types[type]
  method <- methods[method]
  data.plot <- major_df[(major_df$Method == method) & (major_df$CellType == type), c(4:5)] 
  # plotrange <- range(data.plot)[2]
  # plotrange <- round(plotrange,1)+0.1
  #if(max(plotrange)<0.3) plotrange[2] <- plotrange[2] + 0.2
  tmp.plot <- ggscatter(data.plot, x= "p_true", y= "p_hat", color = color, xlim = plotrange, ylim = plotrange, size = 2.5) + theme(aspect.ratio = 1)  + geom_abline(intercept = 0, slope = 1,linetype = "dashed") + xlab("") + ylab("") + theme(plot.margin=unit(c(0,0,-0.5,0),"cm")) + border()+ scale_x_continuous(breaks=ab)+ scale_y_continuous(breaks=ab)
  return(tmp.plot)
}
```

```{r}
plotlist <- list()
for(j in 1:length(methods)){
  for(i in 1:length(types)){
    plotlist <- c(plotlist, list(onebyone(i,j)))
  }
}
ggarrange(plotlist = plotlist, nrow = 5, ncol=4)
```





## COVID-19 subtype data

```{r}
load(file = "D:/Penghui/COVID19 Ren data/ren.ref.subtype.allseverity.RData")
cell_type <- rep(c("B_1", "Mono_3", "CD4_1", "Mono_2", "B_2", "CD8_1", "B_3", "CD8_5", "CD8_7", "NK_1", "Mono_1","DC_2"),106)
load("D:/Penghui/COVID19 Ren data/naturemix sub all severity.RData")
colnames(naturemix$true.frac) <- c("B_1", "Mono_3", "CD4_1", "Mono_2", "B_2", "CD8_1", "B_3", "CD8_5",  "CD8_7", "NK_1", "Mono_1", "DC_2", "severity")
naturemix$true.frac <- naturemix$true.frac[,c("Mono_1", "Mono_2", "Mono_3", "DC_2", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7", "severity")]
```

```{r}
B1 <- rep(1,2)
B2 <- matrix(c(1,1,0,0,0,0,1,1),nrow = 2, byrow = T)
B3 <- matrix(c(1,rep(0,5),1,rep(0,5),1,rep(0,5),1,1),nrow = 4, byrow = T)
B4 <- matrix(c(1,rep(0,6),1,rep(0,6),1,rep(0,6),1,rep(0,6),1,1),nrow = 5, byrow = T)
B5 <- matrix(c(1,1,1,rep(0,12), 1, rep(0,12), 1,1,1, rep(0,12),1,rep(0,12),1,rep(0,12),1,1,1 ), nrow = 6, byrow=T)
B = list(B1,B2,B3,B4,B5)

sort(colMeans(naturemix$true.frac[,c("Mono_1", "Mono_2", "Mono_3", "DC_2", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")]))
```


```{r}
COVIDsub_cvres <- cv_HiDecon(bulk = naturemix$bulk, ref = ren.ref, B = B, cell_type = cell_type, type_order = c("Mono_1", "Mono_2", "Mono_3", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7"), 
                       lambda.set = seq(5,200,5), Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                       test = "wilcox", nmrk = 50, seed = 123)
```


```{r}

real_prop <- naturemix$true.frac[,c("Mono_1", "Mono_2", "Mono_3", "DC_2", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")]

HiDecon_est <- COVIDsub_cvres$cv_res
colnames(HiDecon_est) <- c("Mono_1", "Mono_2", "Mono_3", "DC_2", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")
round(diag(cor(real_prop, HiDecon_est)), 3)
round(mean(diag(cor(real_prop, HiDecon_est))),3)
round(mean(abs(as.matrix(real_prop - HiDecon_est))),3)
```



## COVID-19 subtype data (Mono as a whole)

```{r}
load(file = "D:/Penghui/COVID19 Ren data/ren.ref.subtypelymph.allseverity2.RData")
cell_type <- rep(c("B_1", "CD4_1",  "B_2" , "CD8_1", "B_3" , "CD8_5", "CD8_7" , "NK_1", "Mono" ,"DC"),126)
load("D:/Penghui/COVID19 Ren data/naturemix sublymph all severity2.RData")
colnames(naturemix$true.frac) <- c("B_1", "CD4_1",  "B_2" , "CD8_1", "B_3" , "CD8_5", "CD8_7" , "NK_1", "Mono" ,"DC", "severity")
naturemix$true.frac <- naturemix$true.frac[,c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7", "severity")]
```

```{r}
B1 <- rep(1,2)
B2 <- matrix(c(1,1,0,0,0,0,1,1),nrow = 2, byrow = T)
B3 <- matrix(c(1,rep(0,5),1,rep(0,5),1,rep(0,5),1,1),nrow = 4, byrow = T)
B4 <- matrix(c(1,rep(0,6),1,rep(0,6),1,rep(0,6),1,rep(0,6),1,1),nrow = 5, byrow = T)
B5 <- matrix(c(1,1,1,rep(0,12), 1, rep(0,12), 1,1,1, rep(0,12),1,rep(0,12),1,rep(0,12),1,1,1 ), nrow = 6, byrow=T)
B = list(B1,B2,B3,B4,B5)
B[[5]] <- cbind(c(1,0,0,0,0,0),((B[[5]])[,4:12]))

system.time(single_run <- HiDecon(bulk = naturemix$bulk, ref = ren.ref, B = B, cell_type = cell_type, type_order = c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7"),  
                    lambda = 40, Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                    test = "wilcox", nmrk = 50))

system.time(COVIDsub_cvres <- cv_HiDecon(bulk = naturemix$bulk, ref = ren.ref, B = B, cell_type = cell_type, type_order = c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7"), 
                       lambda.set = seq(10,200,10), Pi.start=NULL, max.iter=1e4, tol=1e-6, 
                       test = "wilcox", nmrk = 50, seed = 123))
```

```{r}
real_prop <- naturemix$true.frac
real_prop <- real_prop[,c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")]
```

```{r}
HiDecon_est <- COVIDsub_cvres$cv_res
colnames(HiDecon_est) <- c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")
round(colMeans(real_prop), 2)
round(diag(cor(real_prop, HiDecon_est)), 3)
round(mean(diag(cor(real_prop, HiDecon_est))),3)
round(mean(abs(as.matrix(real_prop - HiDecon_est))),3)
```

```{r}
HiDecon_est <- COVIDsub_cvres$cv_res
colnames(HiDecon_est) <- c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")
round(colMeans(real_prop), 2)
round(diag(cor(real_prop, HiDecon_est, method = "spearman")), 3)
round(mean(diag(cor(real_prop, HiDecon_est, method = "spearman"))),3)
round(mean(abs(as.matrix(real_prop - HiDecon_est))),3)
```

```{r, warning=FALSE}
source("D:/Penghui/HiDecon preferred vers/Other methods.R")
other_est <- Other_methods(bulk = naturemix$bulk, ref = ren.ref, cell_type = cell_type, real_prop = real_prop)
```

```{r}
rownames(HiDecon_est) <- rownames(other_est[[1]])
colnames(HiDecon_est) <- colnames(other_est[[1]])
nature_res <- c(list("real" = real_prop), other_est, list("HiDecon"=HiDecon_est))
save(nature_res, file = "D:/Penghui/HiDecon preferred vers/COVID subtype res.RData")
```


```{r, warning=FALSE}
load("D:/Penghui/HiDecon preferred vers/COVID subtype res.RData")
real_prop <- nature_res$real
nature_res$real <- NULL
nature_res <- nature_res[c("HiDecon","CIBERSORT", "dtangle", "MuSiC")]

my.CCC <- function(est, tr){
  CT.CCC <- c()
  for(i in 1:ncol(est)){
    CT.CCC <- c(CT.CCC, unlist(DescTools::CCC(est[,i], tr[,i])$rho.c[1]))
  }
  CT.CCC <- c(CT.CCC, mean(CT.CCC))
  names(CT.CCC) <- c(colnames(est), "mCCC")
  
  return(CT.CCC)
}

CT.CCC <- matrix(unlist(lapply(nature_res, function(x){my.CCC(x, real_prop)})), byrow=TRUE, nrow = length(nature_res))
rownames(CT.CCC) <- names(nature_res)
rownames(CT.CCC) <- names(nature_res)
round(CT.CCC,2)
```

```{r}
round(unlist(lapply(nature_res, function(x){mean(abs(as.matrix(x - real_prop)))})),2)
```




```{r}
rownames(HiDecon_est) <- rownames(other_est[[1]])
nature_res <- c(other_est, list("HiDecon"=HiDecon_est))

```

```{r}
true_frac <- real_prop
source("D:/Penghui/HiDecon on p/HiDecon_wrapper on p.R") #just to use the getOutput function in this file
major_df <- lapply(1:length(nature_res), function (x){
  getOutput(nature_res[[x]],true = as.data.frame(true_frac),methd = names(nature_res)[x])
}) 
major_df <- bind_rows(major_df)
major_df$bulk <- "Covid19"

celltype_col = c("#ff595e","#ff924c","#ffca3a","#c5ca30","#8ac926","#36949d","#1982c4","#4267ac","#565aa0","#6a4c93")
```





```{r}
types <- c("Mono", "DC", "B_1", "B_2", "B_3","NK_1","CD4_1", "CD8_1", "CD8_5", "CD8_7")
methods <- c("HiDecon","CIBERSORT","dtangle","MuSiC")
range <- list(c(0,0.9),c(0,0.3),c(0,0.4),c(0,0.4),c(0,0.4),c(0,0.4),c(0,0.5),c(0,0.5),c(0,0.4),c(0,0.7))
axisbreaks <- list(seq(0,0.9,0.4), seq(0,0.3,0.1), seq(0,0.4,0.2),seq(0,0.4,0.2), seq(0,0.4,0.2),seq(0,0.4,0.2),c(0,0.4,0.2),c(0,0.4,0.2),seq(0,0.4,0.2),seq(0,0.7,0.3))
onebyone <- function(type, method){
  ab <- axisbreaks[[type]]
  plotrange <- range[[type]]
  color <- celltype_col[type]
  type <- types[type]
  method <- methods[method]
  data.plot <- major_df[(major_df$Method == method) & (major_df$CellType == type), c(4:5)] 
 
  tmp.plot <- ggscatter(data.plot, x= "p_true", y= "p_hat", color = color, xlim = plotrange, ylim = plotrange, size = 2.5) + theme(aspect.ratio = 1)  + geom_abline(intercept = 0, slope = 1,linetype = "dashed") + xlab("") + ylab("") + theme(plot.margin=unit(c(0,0,-0.5,0),"cm")) + border()+ scale_x_continuous(breaks=ab)+ scale_y_continuous(breaks=ab)
  return(tmp.plot)
}
```

```{r}


plotlist1 <- list()
for(j in 1:length(methods)){
  for(i in 1:(length(types)/2)){
    plotlist1 <- c(plotlist1, list(onebyone(i,j)))
  }
}
ggarrange(plotlist = plotlist1, nrow = 4, ncol=5)

plotlist2 <- list()
for(j in 1:length(methods)){
  for(i in 6:(length(types))){
    plotlist2 <- c(plotlist2, list(onebyone(i,j)))
  }
}
ggarrange(plotlist = plotlist2, nrow = 4, ncol=5)
```
